'use client';

import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { useRouter } from 'next/navigation';
import Navbar from '../components/Navbar';
import Button from '../components/Button';

interface ContentData {
  title: string;
  script: string;
  captions: string[];
  visualSuggestions: string[];
  niche: string;
  voiceStyle: string;
}

export default function PreviewPage() {
  const router = useRouter();
  const [contentData, setContentData] = useState<ContentData | null>(null);
  const [isPlayingVideo, setIsPlayingVideo] = useState(false);

  useEffect(() => {
    // Load data from localStorage (in a real app, this would come from your backend)
    const creatorData = localStorage.getItem('creatorData');
    const selectedNiche = localStorage.getItem('selectedNiche');
    const generatedScript = localStorage.getItem('generatedScript');
    const voiceStyle = localStorage.getItem('voiceStyle');

    if (creatorData && selectedNiche && generatedScript) {
      const niche = JSON.parse(selectedNiche);
      const data = JSON.parse(creatorData);
      
      setContentData({
        title: `My ${niche.title} Journey`,
        script: generatedScript,
        captions: [
          "Ready to transform your content game? üöÄ",
          "This is just the beginning of your creator journey!",
          "Share your story, inspire others, and grow together!",
          "Your unique voice matters - let's make it heard!"
        ],
        visualSuggestions: [
          "Use bright, engaging thumbnails",
          "Include text overlays for key points",
          "Add smooth transitions between scenes",
          "Consider using B-roll footage"
        ],
        niche: niche.title,
        voiceStyle: voiceStyle || 'friendly'
      });
    }
  }, []);

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text);
    // You could add a toast notification here
  };

  const downloadContent = () => {
    if (!contentData) return;
    
    const content = `
LAUNCHCREATOR.AI - CONTENT PLAN

TITLE: ${contentData.title}
NICHE: ${contentData.niche}
VOICE STYLE: ${contentData.voiceStyle}

SCRIPT:
${contentData.script}

CAPTIONS:
${contentData.captions.map((caption, index) => `${index + 1}. ${caption}`).join('\n')}

VISUAL SUGGESTIONS:
${contentData.visualSuggestions.map((suggestion, index) => `${index + 1}. ${suggestion}`).join('\n')}

Generated by LaunchCreator.ai
    `;
    
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'content-plan.txt';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const startOver = () => {
    localStorage.clear();
    router.push('/onboarding');
  };

  if (!contentData) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-[#1A1A1A] via-[#2A2A2A] to-[#1A1A1A] flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-400">Loading your content...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#1A1A1A] via-[#2A2A2A] to-[#1A1A1A]">
      <Navbar currentStep={5} totalSteps={5} />
      
      <div className="px-6 py-12">
        <div className="max-w-6xl mx-auto">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center mb-12"
          >
            <h1 className="text-4xl md:text-5xl font-bold mb-6">
              <span className="bg-gradient-to-r from-blue-400 to-purple-600 bg-clip-text text-transparent">
                Your Content is Ready! üéâ
              </span>
            </h1>
            <p className="text-xl text-gray-400 max-w-2xl mx-auto">
              Here's your complete content package. Download it, customize it, and start creating!
            </p>
          </motion.div>

          <div className="grid lg:grid-cols-2 gap-8 mb-8">
            {/* Content Preview */}
            <motion.div
              initial={{ opacity: 0, x: -30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8, delay: 0.2 }}
              className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 p-8 rounded-2xl border border-gray-700/50 backdrop-blur-sm"
            >
              <h2 className="text-2xl font-bold mb-6 text-white">üì∫ Content Preview</h2>
              
              {/* Video Placeholder */}
              <div className="bg-gray-700/50 rounded-2xl p-8 text-center mb-6">
                <div className="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto mb-4">
                  <svg className="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                    <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clipRule="evenodd" />
                  </svg>
                </div>
                <h3 className="text-lg font-semibold text-white mb-2">{contentData.title}</h3>
                <p className="text-gray-400 text-sm mb-4">Your video preview would appear here</p>
                <Button
                  onClick={() => setIsPlayingVideo(!isPlayingVideo)}
                  variant="outline"
                  size="sm"
                >
                  {isPlayingVideo ? 'Pause' : 'Play'} Preview
                </Button>
              </div>

              {/* Content Details */}
              <div className="space-y-4">
                <div className="bg-gray-700/30 p-4 rounded-xl">
                  <h4 className="font-semibold text-white mb-2">üéØ Niche</h4>
                  <p className="text-gray-300">{contentData.niche}</p>
                </div>
                <div className="bg-gray-700/30 p-4 rounded-xl">
                  <h4 className="font-semibold text-white mb-2">üé§ Voice Style</h4>
                  <p className="text-gray-300 capitalize">{contentData.voiceStyle}</p>
                </div>
              </div>
            </motion.div>

            {/* Script & Captions */}
            <motion.div
              initial={{ opacity: 0, x: 30 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
              className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 p-8 rounded-2xl border border-gray-700/50 backdrop-blur-sm"
            >
              <h2 className="text-2xl font-bold mb-6 text-white">üìù Script & Captions</h2>
              
              <div className="space-y-6">
                {/* Script */}
                <div>
                  <div className="flex items-center justify-between mb-3">
                    <h4 className="font-semibold text-white">Your Script</h4>
                    <Button
                      onClick={() => copyToClipboard(contentData.script)}
                      variant="outline"
                      size="sm"
                    >
                      Copy
                    </Button>
                  </div>
                  <div className="bg-gray-700/30 p-4 rounded-xl max-h-32 overflow-y-auto">
                    <p className="text-gray-300 text-sm whitespace-pre-line">{contentData.script}</p>
                  </div>
                </div>

                {/* Captions */}
                <div>
                  <h4 className="font-semibold text-white mb-3">Social Media Captions</h4>
                  <div className="space-y-2">
                    {contentData.captions.map((caption, index) => (
                      <div key={index} className="bg-gray-700/30 p-3 rounded-lg flex items-center justify-between">
                        <p className="text-gray-300 text-sm">{caption}</p>
                        <Button
                          onClick={() => copyToClipboard(caption)}
                          variant="outline"
                          size="sm"
                        >
                          Copy
                        </Button>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </motion.div>
          </div>

          {/* Visual Suggestions */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
            className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 p-8 rounded-2xl border border-gray-700/50 backdrop-blur-sm mb-8"
          >
            <h2 className="text-2xl font-bold mb-6 text-white">üé¨ Visual Suggestions</h2>
            <div className="grid md:grid-cols-2 gap-4">
              {contentData.visualSuggestions.map((suggestion, index) => (
                <div key={index} className="bg-gray-700/30 p-4 rounded-xl">
                  <div className="flex items-start space-x-3">
                    <span className="text-blue-500 font-bold">{index + 1}.</span>
                    <p className="text-gray-300">{suggestion}</p>
                  </div>
                </div>
              ))}
            </div>
          </motion.div>

          {/* Action Buttons */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.8 }}
            className="flex flex-col sm:flex-row gap-4 justify-center items-center"
          >
            <Button
              onClick={downloadContent}
              size="lg"
            >
              <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
              Download All Content
            </Button>
            
            <Button
              onClick={startOver}
              variant="outline"
              size="lg"
            >
              <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
              Create Another
            </Button>
          </motion.div>

          {/* Success Message */}
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8, delay: 1 }}
            className="mt-12 text-center"
          >
            <div className="bg-gradient-to-r from-green-500/10 to-blue-500/10 border border-green-500/20 rounded-2xl p-6">
              <h3 className="text-xl font-bold text-green-400 mb-2">üéâ Congratulations!</h3>
              <p className="text-gray-300">
                You've successfully created your first piece of content with LaunchCreator.ai. 
                You're now ready to start your creator journey!
              </p>
            </div>
          </motion.div>
        </div>
      </div>
    </div>
  );
} 